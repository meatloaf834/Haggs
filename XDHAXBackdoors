-- STILL WIP FATTIES


print("wip, dummy")
local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
	-- Set Center to true if you want the menu to appear in the center
	-- Set AutoShow to true if you want the menu to appear when it is created
	-- Position and Size are also valid options here
	-- but you do not need to define them unless you are changing them :)

	Title = 'XDHAX! v0.0.1',
	Center = true,
	AutoShow = true,
	TabPadding = 8,
	MenuFadeTime = 0.2
})

local roomcUrent = workspace.CurrentRooms:GetChildren()[#workspace.CurrentRooms:GetChildren()]

spawn(function()
	while wait() do
		roomcUrent = workspace.CurrentRooms:GetChildren()[#workspace.CurrentRooms:GetChildren()]
	end
end)


function esp(Things)
	while wait() do
		local foundThing
		for i, v in pairs(workspace:GetDescendants()) do
			for i, uhh in pairs(Things) do
				if v.Name == uhh and not v:FindFirstChild("Highlight") then
					foundThing = v
				end
			end
		end
		if not foundThing:FindFirstChild("Highlight") then
			Instance.new("Highlight",foundThing)
		end
	end
end

function instantprompt()
	for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
		if v:IsA("ProximityPrompt") then
			v["HoldDuration"] = 0
		end
	end
end

function bypassthis()
	spawn(function()
		while wait(0.2) do
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Size = Vector3.new(5.5,3,3)
			task.wait(0.2)
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Size = Vector3.new(1.1,1.1,1.22)
		end
	end)
end

function speedUp(amount)
	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = amount
end

function fullBright()
	spawn(function()
		while wait() do
			game.Lighting.Ambient = Color3.fromRGB(255,255,255)
		end
	end)
end

function FOVchange()
	spawn(function()
		while wait() do
			workspace.CurrentCamera.FieldOfView = 120
		end
	end)
end

local Tabs = {
	-- Creates a new tab titled Main
	Main = Window:AddTab('Main'),
	['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Groupbox')

local esptable = {
	"Backdoor_Wardrobe",
	"KeyObtain",
	"TimerLever",
	"BackdoorRush"
}


LeftGroupBox:AddToggle('esp', {
	Text = 'ESP Everything',
	Default = false, -- Default value (true / false)
	Tooltip = 'shut up fatty', -- Information shown when you hover over the toggle

	Callback = function(Value)
		if Value then
			workspace.CurrentRooms.ChildAdded:Connect(function()
				esp(esptable)
			end)
		end
	end
})

LeftGroupBox:AddToggle('bypass', {
	Text = "Bypass Speed Anticheat",
	Default = false,
	Tooltip = "this will make ur camera bop up and down, sorry",

	Callback = function(Value)
		if Value then
			bypassthis()
		end
	end
})

LeftGroupBox:AddToggle('Speed Up', {
	Text = "Increase Speed",
	Default = false,
	Tooltip = "theres no slider, sorry, i still gotta figure it out",

	Callback = function(Value)
		if Value then
			spawn(function()
				while task.wait() do
					speedUp(55)
				end
			end)
		end
	end
})

LeftGroupBox:AddToggle('Fullbirght', {
	Text = "Fullbright",
	Default = false,
	Tooltip = "finally a good working one",

	Callback = function(Value)
		if Value then
			fullBright()
		end
	end
})

LeftGroupBox:AddToggle('instant', {
	Text = "Instant Prompt",
	Default = false,
	Tooltip = "finally a good working oneadf",

	Callback = function(Value)
		if Value then
			spawn(function()
				while wait() do
					instantprompt()
				end
			end)
		end
	end
})

LeftGroupBox:AddToggle('fov', {
	Text = "Change FOV",
	Default = false,
	Tooltip = "fiasdfnaadsflasdfadsfasdfly sdfasdfrkingadfadsf onasdfeadf",

	Callback = function(Value)
		if Value then
			FOVchange()
			game.Players.LocalPlayer.MainUI.Initiator.MainGame.Camera.Enabled = false
		end
	end
})



local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })

Library.ToggleKeybind = Options.MenuKeybind -- Allows you to have a custom keybind for the menu

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- ThemeManager (Allows you to have a menu theme system)

-- Hand the library over to our managers
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- Adds our MenuKeybind to the ignore list
-- (do you want each config to have a different menu key? probably not.)
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')

-- Builds our config menu on the right side of our tab
SaveManager:BuildConfigSection(Tabs['UI Settings'])

-- Builds our theme menu (with plenty of built in themes) on the left side
-- NOTE: you can also call ThemeManager:ApplyToGroupbox to add it to a specific groupbox
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
